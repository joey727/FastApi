name: Build and Deploy App 

on: [push] 
jobs: 
  ci:
    environment: 
      name: Testing

    env: 
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}} 
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}} 
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}} 

    services: 
      postgres: 
        image: postgres

        env: 
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test 

        ports: 
          - 5432:5432

        options: >- 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest  
    steps: 
      - name: pull git repo
        uses: actions/checkout@v2
      
      - name: setup python 
        uses: actions/setup-python@v2 
        with: 
          python-version: "3.13" 

      - name: upgrade pip 
        run: python -m pip install --upgrade pip 

      - name: install dependencies
        run: pip install -r requirements.txt 

      - name: run tests 
        run: pytest -v

      - name: Login to Docker Hub 
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}} 

      - name: Setup docker buildx 
        id: buildx 
        uses: docker/setup-buildx-action@v1 

      - name: Build and Push 
        id: docker_build
        uses: docker/build-push-action@v2 
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{steps.buildx.outputs.name}}
          push: true 
          tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{steps.docker_build.outputs.digest}}

